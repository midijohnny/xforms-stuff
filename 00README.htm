<h1 id="readme">README</h1>
<p>The file [mqtt.xml] is a single page <a href="https://www.w3.org/TR/xforms">XForms</a> based web app to provide a simple test client for <a href="https://en.wikipedia.org/wiki/MQTT">MQTT</a> over <a href="https://en.wikipedia.org/wiki/WebSocket">Websockets</a>. The app has two client-side dependencies:</p>
<ul>
<li><a href="http://www.agencexml.com/xsltforms">XSLTForms</a> to provide the <a href="https://www.w3.org/TR/xforms">XForms</a> engine</li>
<li><a href="https://eclipse.dev/paho/index.php?page=clients/js/index.php">Paho</a> Javascript library to connect to <a href="https://en.wikipedia.org/wiki/MQTT">MQTT</a> server.</li>
</ul>
<p>It also requires an MQTT broker with Websocket support. I used <a href="https://mosquitto.org/">Mosquitto</a>.</p>
<h2 id="setup-for-mosquitto">Setup for Mosquitto</h2>
<p>There is no support for authentication - so the broker must configured to allow anonymous access. Mosquitto can deliver the app via HTTP if the option ‘http_dir’ is setup. Alternatively - you can run a separate web-server (it doesn’t matter which) to deliver the app.</p>
<p>Here’s an example of the configuration settings:</p>
<pre><code>[...]
allow_anonymous true

# Regular TCP socket
listener 1883

listener 9001
protocol websockets

http_dir /home/joebloggs/www 
[...]</code></pre>
<p>The ‘http_dir’ can be anything you want - that’s where the files go.</p>
<p>On my Ubuntu system the configuration filepath is /etc/mosquitto/mosquitto.conf and requires root access to edit. After changing the configuration the broker needs to be restarted:</p>
<div class="sourceCode" id="cb2"><pre class="sourceCode bash"><code class="sourceCode bash"><span id="cb2-1"><a href="#cb2-1" aria-hidden="true"></a>$ <span class="fu">sudo</span> systemctl restart mosquitto.service</span></code></pre></div>
<h3 id="testing-mosquitto-setup">Testing Mosquitto Setup</h3>
<p>To test the broker you can use the commands:</p>
<ul>
<li><a href="https://mosquitto.org/man/mosquitto_sub-1.html">Mosquitto_Sub</a></li>
<li><a href="https://mosquitto.org/man/mosquitto_pub-1.html">Mosquitto_Pub</a></li>
</ul>
<p>For instance to subscribe to a topic “test” using the Mosquitto server on the local machine:</p>
<div class="sourceCode" id="cb3"><pre class="sourceCode bash"><code class="sourceCode bash"><span id="cb3-1"><a href="#cb3-1" aria-hidden="true"></a>$ <span class="ex">mosquitto_sub</span> -h localhost -t <span class="st">&#39;test&#39;</span></span></code></pre></div>
<p>The command will loop until you CTRL-C it.</p>
<p>To publish a text message to the topic:</p>
<div class="sourceCode" id="cb4"><pre class="sourceCode bash"><code class="sourceCode bash"><span id="cb4-1"><a href="#cb4-1" aria-hidden="true"></a>$ <span class="ex">mosquitto_sub</span> -h localhost -t <span class="st">&#39;test&#39;</span> -m <span class="st">&quot;hello world&quot;</span></span></code></pre></div>
<p>Note: the commands use the default 1883 port, rather than the 9001 Websocket.</p>
<h3 id="testing-the-app">Testing the app</h3>
<p>Point your browser at your webserver. If you are using Mosquitto itself, then the URL will be as follows:</p>
<pre><code>http://localhost:9001/mqtt.xml</code></pre>
<p>You should see something like this:</p>
<p><img src="img/screenshot1.png" /></p>
<p>By default the app will autoconnect, you can change this behaviour by editing the XForms instance ‘mqtt’ - contained within the HTML file, change `<code>autoconnect</code> to ‘false’.</p>
<div class="sourceCode" id="cb6"><pre class="sourceCode xml"><code class="sourceCode xml"><span id="cb6-1"><a href="#cb6-1" aria-hidden="true"></a>    <span class="kw">&lt;xf:instance</span><span class="ot"> id=</span><span class="st">&quot;mqtt&quot;</span><span class="kw">&gt;</span></span>
<span id="cb6-2"><a href="#cb6-2" aria-hidden="true"></a>        <span class="kw">&lt;client</span><span class="ot"> xmlns=</span><span class="st">&quot;&quot;</span><span class="kw">&gt;</span></span>
<span id="cb6-3"><a href="#cb6-3" aria-hidden="true"></a></span>
<span id="cb6-4"><a href="#cb6-4" aria-hidden="true"></a>            <span class="kw">&lt;connection</span></span>
<span id="cb6-5"><a href="#cb6-5" aria-hidden="true"></a><span class="ot">                connected=</span><span class="st">&quot;false&quot;</span></span>
<span id="cb6-6"><a href="#cb6-6" aria-hidden="true"></a><span class="ot">                hostname=</span><span class="st">&quot;localhost&quot;</span></span>
<span id="cb6-7"><a href="#cb6-7" aria-hidden="true"></a><span class="ot">                port=</span><span class="st">&quot;9001&quot;</span></span>
<span id="cb6-8"><a href="#cb6-8" aria-hidden="true"></a><span class="ot">                clientID=</span><span class="st">&quot;browser&quot;</span></span>
<span id="cb6-9"><a href="#cb6-9" aria-hidden="true"></a><span class="ot">                autoconnect=</span><span class="st">&quot;true&quot;</span></span>
<span id="cb6-10"><a href="#cb6-10" aria-hidden="true"></a>            <span class="kw">/&gt;</span></span>
<span id="cb6-11"><a href="#cb6-11" aria-hidden="true"></a></span>
<span id="cb6-12"><a href="#cb6-12" aria-hidden="true"></a>            <span class="kw">&lt;pub</span><span class="ot"> topic=</span><span class="st">&quot;camera/take_picture&quot;</span><span class="kw">/&gt;</span></span>
<span id="cb6-13"><a href="#cb6-13" aria-hidden="true"></a>            <span class="kw">&lt;pub</span><span class="ot"> topic=</span><span class="st">&quot;topic1&quot;</span><span class="kw">/&gt;</span></span>
<span id="cb6-14"><a href="#cb6-14" aria-hidden="true"></a>            <span class="kw">&lt;pub</span><span class="ot"> topic=</span><span class="st">&quot;topic2&quot;</span><span class="kw">/&gt;</span></span>
<span id="cb6-15"><a href="#cb6-15" aria-hidden="true"></a>            <span class="kw">&lt;pub</span><span class="ot"> topic=</span><span class="st">&quot;topic3&quot;</span><span class="kw">/&gt;</span></span>
<span id="cb6-16"><a href="#cb6-16" aria-hidden="true"></a>            <span class="kw">&lt;pub</span><span class="ot"> topic=</span><span class="st">&quot;topic4&quot;</span><span class="kw">/&gt;</span></span>
<span id="cb6-17"><a href="#cb6-17" aria-hidden="true"></a>            <span class="kw">&lt;pub</span><span class="ot"> topic=</span><span class="st">&quot;echo&quot;</span><span class="kw">/&gt;</span></span>
<span id="cb6-18"><a href="#cb6-18" aria-hidden="true"></a></span>
<span id="cb6-19"><a href="#cb6-19" aria-hidden="true"></a>            <span class="kw">&lt;sub</span><span class="ot"> topic=</span><span class="st">&quot;camera/image_received&quot;</span><span class="kw">/&gt;</span></span>
<span id="cb6-20"><a href="#cb6-20" aria-hidden="true"></a>            <span class="kw">&lt;sub</span><span class="ot"> topic=</span><span class="st">&quot;topic6&quot;</span><span class="kw">/&gt;</span></span>
<span id="cb6-21"><a href="#cb6-21" aria-hidden="true"></a>            <span class="kw">&lt;sub</span><span class="ot"> topic=</span><span class="st">&quot;echo&quot;</span><span class="kw">/&gt;</span></span>
<span id="cb6-22"><a href="#cb6-22" aria-hidden="true"></a></span>
<span id="cb6-23"><a href="#cb6-23" aria-hidden="true"></a>            <span class="kw">&lt;log/&gt;</span></span>
<span id="cb6-24"><a href="#cb6-24" aria-hidden="true"></a>    </span>
<span id="cb6-25"><a href="#cb6-25" aria-hidden="true"></a>            <span class="kw">&lt;message</span></span>
<span id="cb6-26"><a href="#cb6-26" aria-hidden="true"></a><span class="ot">                topic=</span><span class="st">&quot;&quot;</span></span>
<span id="cb6-27"><a href="#cb6-27" aria-hidden="true"></a><span class="ot">                payload=</span><span class="st">&quot;hello world&quot;</span></span>
<span id="cb6-28"><a href="#cb6-28" aria-hidden="true"></a><span class="ot">                comment=</span><span class="st">&quot;Outgoing message&quot;</span><span class="kw">/&gt;</span></span>
<span id="cb6-29"><a href="#cb6-29" aria-hidden="true"></a>        <span class="kw">&lt;/client&gt;</span></span>
<span id="cb6-30"><a href="#cb6-30" aria-hidden="true"></a>    <span class="kw">&lt;/xf:instance&gt;</span></span></code></pre></div>
<p>See the ‘binds’ as well - in particular know that the ‘connection/<span class="citation" data-cites="connected">@connected</span>’ flag is automatically set to ‘true’ when connected, and ‘false’ when not. So - the UI can automatically react to changes from this setting.</p>
<p>Try this:</p>
<ul>
<li>Connect into Mosquitto with the browser.</li>
<li>Shutdown Mosquitto:</li>
</ul>
<div class="sourceCode" id="cb7"><pre class="sourceCode bash"><code class="sourceCode bash"><span id="cb7-1"><a href="#cb7-1" aria-hidden="true"></a>$ <span class="fu">sudo</span> systemctl stop mosquitto.service</span></code></pre></div>
<p>XForms realizes immediately that the connection is lost - and will magically de-activate the ‘send message’ form and re-activate the login form.</p>
<p><img src="img/screenshot2.png" /></p>
<h3 id="side-note.">Side note.</h3>
<p>There seem to be multiple versions of the <a href="https://eclipse.dev/paho/index.php?page=clients/js/index.php">Paho</a> libraries out there; some refer to the ‘Paho.MQTT.Client’ and others just ‘Paho.Client’. I’m using the latter - since I had some issues understanding how to retrieve the payload from the <a href="https://cdnjs.cloudflare.com/ajax/libs/paho-mqtt/1.0.1/mqttws31.js">CDN</a> version (which requires ‘Paho.MQTT.Client’).</p>
<p><a href="http://www.agencexml.com/xsltforms">XSLTForms</a> is available from a number of places as well - the version I’m using reports to be 1.7. And I choose this particular download location (github) because I could automatically download - and it seems to be the latest version publically available.</p>
<p>You can also find it on <a href="https://sourceforge.net/projects/xsltforms/">SourceForge</a>.</p>
<h2 id="getting-dependencies.">Getting dependencies.</h2>
<p>For what its worth - there is a simple ‘Makefile’ to download the dependencies.</p>
<pre class="make"><code>XSLTFORMS=declarative4all/build/xsl/xsltforms.xsl
PAHOJS=js/
mqtt.xml: ${XSLTFORMS} ${PAHOJS}

${XSLTFORMS}:
    git clone https://github.com/AlainCouthures/declarative4all.git

${PAHOJS}:
    mkdir js
    curl https://raw.githubusercontent.com/eclipse/paho.mqtt.javascript/master/src/paho-mqtt.js --output js/paho-mqtt.js --location</code></pre>
<h3 id="useful-links">Useful links:</h3>
<p>A couple of useful resources for XForms and MQTT :</p>
<ul>
<li><a href="https://homepages.cwi.nl/~steven/xforms11-for-html-authors/">Xforms: A Tutorial</a></li>
<li><a href="http://www.steves-internet-guide.com/mqtt/">Beginners Guide To The MQTT Protocol</a></li>
</ul>
<h3 id="final-notes">Final notes:</h3>
<p>There is no ability to edit the subscription or publication list from the UI - this is all read from the config file. However: since this is based on XForms, this should be relatively straigtforward to implement: remembering that we need to tell the MQTT client about any changes. (Or just allowing editing when the client is already disconnected might be simpler to implement).</p>
<p>The events like “mqtt-connect” are scattered all over the source file; it might be useful to have them all defined within an XForms instance. The <a href="https://eclipse.dev/paho/index.php?page=clients/js/index.php">Paho</a> library lists out explicit error codes - such as “AMQJSC0000I OK.”, “AMQJSC0001E” - it would be good to expose these to the XForms instances as well.</p>
<p>There is no limit of the number of logging entries that will get written - this could be a problem if the browser is left unattended and is receiving messages. It would be nice if the number of log self-managed itself - to automatically clear our entries when the ‘buffer’ goes over a certain limit. (and/or throw away old messages).</p>
